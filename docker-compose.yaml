version: "3.9"
services:
  nginx:
    image: nginx:1.25.3-alpine3.18
    container_name: dictate-nginx
    restart: unless-stopped
    ports:
      - "80:80"
    networks:
      - frontend
    volumes:
      - ./nginx/:/etc/nginx/conf.d/
    depends_on:
      - app-server
  app-server:
    build: .
    container_name: dictate-app-server
    command: "gunicorn core.wsgi:application -b 0.0.0.0:8000 -w 2"
    # workers = (2 x $num_cores) + 1
    environment:
      - DOCKER_COMPOSE=true
    restart: unless-stopped
    networks:
      - frontend
      - backend
    depends_on:
      postgres:
        condition: service_started
      redis:
        condition: service_started
      db-setup:
        condition: service_completed_successfully
  # websocket server
  # celery worker
  # coturn
  postgres:
    image: postgres:16-alpine3.18
    container_name: dictate-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    volumes:
      - postgres-master:/var/lib/postgresql/data
    networks:
      - backend
  redis:
    image: redis:7.2-alpine3.18
    container_name: dictate-redis
    restart: unless-stopped
    volumes:
      - redis-1:/data
    networks:
      - backend
  db-setup:
    container_name: dictate-db-setup
    build: .
    command: "python manage.py setup_db"
    environment:
      - DOCKER_COMPOSE=true
    networks:
      - backend
    depends_on:
      - postgres
volumes:
  postgres-master:
    name: dictate-postgres-master
    driver: local
  redis-1:
    name: dictate-redis-1
    driver: local
networks:
  # default:
  #   name: dictate-default
  frontend:
    name: dictate-frontend
  backend:
    name: dictate-backend
