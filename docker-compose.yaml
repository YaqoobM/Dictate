version: "3.9"
services:
  # nginx
  app-server:
    container_name: dictate-app-server
    build: .
    command: "gunicorn core.wsgi:application -b 0.0.0.0:8000 -w 2"
    environment:
      - DOCKER_COMPOSE=true
    restart: unless-stopped
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_started
      redis:
        condition: service_started
      db-setup:
        condition: service_completed_successfully
  # websocket server
  # celery worker
  # coturn
  # db-setup
  postgres:
    image: postgres:16-alpine3.18
    container_name: dictate-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    volumes:
      - postgres-master:/var/lib/postgresql/data
  redis:
    image: redis:7.2-alpine3.18
    container_name: dictate-redis
    restart: unless-stopped
    volumes:
      - redis-1:/data
  db-setup:
    container_name: dictate-db-setup
    build: .
    command: "python manage.py setup_db"
    environment:
      - DOCKER_COMPOSE=true
    depends_on:
      - postgres
volumes:
  postgres-master:
    name: dictate-postgres-master
    driver: local
  redis-1:
    name: dictate-redis-1
    driver: local
networks:
  default:
    name: dictate-default
  # frontend & backend?