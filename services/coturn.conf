# Coturn TURN SERVER configuration file
# See: https://github.com/coturn/coturn/blob/master/examples/etc/turnserver.conf

### General
# No. threads
# If explicitly set to 0 then application handles that traffic in a single thread.
relay-threads=0

# By default, this option is NOT set.
stun-only

# Disable RFC5780 (NAT behavior discovery).
no-rfc5780

# Disable handling old STUN Binding requests and disable MAPPED-ADDRESS
# attribute in binding response (use only the XOR-MAPPED-ADDRESS).
no-stun-backward-compatibility

# Only send RESPONSE-ORIGIN attribute in binding response if RFC5780 is enabled.
response-origin-only-with-rfc5780

# Return an HTTP/S response when an HTTP/S connection is made to a TCP port
# otherwise only supporting STUN/TURN.
respond-http-unsupported

### Ports
# TURN listener port for UDP and TCP
listening-port=3478

# Lower and upper bounds of the UDP relay endpoints
min-port=49160
max-port=49163

# IPs the TURN server listens to
listening-ip=0.0.0.0

# For Amazon EC2 users:
#
# TURN Server public/private address mapping, if the server is behind NAT.
# In that situation, if a -X is used in form "-X <ip>" then that ip will be reported
# as relay IP address of all allocations. This scenario works only in a simple case
# when one single relay address is be used, and no RFC5780 functionality is required.
# That single relay address must be mapped by NAT to the 'external' IP.
# The "external-ip" value, if not empty, is returned in XOR-RELAYED-ADDRESS field.
# For that 'external' IP, NAT must forward ports directly (relayed port 12345
# must be always mapped to the same 'external' port 12345).
#
# In more complex case when more than one IP address is involved,
# that option must be used several times, each entry must
# have form "-X <public-ip/private-ip>", to map all involved addresses.
# RFC5780 NAT discovery STUN functionality will work correctly,
# if the addresses are mapped properly, even when the TURN server itself
# is behind A NAT.
#
# By default, this value is empty, and no address mapping is used.
#
#external-ip=60.70.80.91
#
# OR:
#
#external-ip=60.70.80.91/172.17.19.101
#external-ip=60.70.80.92/172.17.19.102

# Uncomment if no TLS client listener is desired.
no-tls

# Uncomment if no DTLS client listener is desired.
no-dtls

### Logs
# Log settings
verbose
log-binding

### TURN Auth
# Uncomment to use fingerprints in the TURN messages.
fingerprint

# Uncomment to use long-term credential mechanism.
# By default no credentials mechanism is used (any user allowed).
lt-cred-mech

# 'Static' user accounts for the long term credentials mechanism, only.
# This option cannot be used with TURN REST API.
user=dictate:super_secret_password

### TURN Database
# This database can be used for the long-term credential mechanism
# and it can store the secret value for secret-based timed authentication in TURN REST API.
# Passed as arg in docker-compose.yaml
# psql-userdb="postgresql://dictate_admin:1234@postgres:5432/coturn"

# Must be used with long-term credentials mechanism or with TURN REST API.
# Note: If the default realm is not specified, then realm falls back to the host domain name.
#       If the domain name string is empty, or set to '(None)', then it is initialized as an empty string.
# Used to seperate different domains using same server
realm=dictate.com

### Other
# Flag that can be used to allow peers on the loopback addresses (127.x.x.x and ::1).
# This is an extra security measure.
#
# (To avoid any security issue that allowing loopback access may raise,
# the no-loopback-peers option is replaced by allow-loopback-peers.)
#
# Allow it only for testing in a development environment!
# In production it adds a possible security vulnerability, so for security reasons
# it is not allowed using it together with empty cli-password.
# allow-loopback-peers

# Turn OFF the CLI support.
# Default 127.0.0.1:5766
# no-cli
#
# CLI access password. Default is empty (no password).
# For the security reasons, it is recommended that you use the encrypted
# form of the password (see the -P command in the turnadmin utility).
#
# Secure form for password 'qwerty':
#
#cli-password=$5$79a316b350311570$81df9cfb9af7f5e5a76eada31e7097b663a0670f99a3c07ded3f1c8e59c5658a
#
# Or unsecure form for the same password:
#
cli-password=super_secret_password
